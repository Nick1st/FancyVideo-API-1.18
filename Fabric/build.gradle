//######################################################################################################################
//                                              Build Plugin Declaration
//######################################################################################################################
plugins {
    alias(libs.plugins.shadow)
    alias(libs.plugins.fabricLoom)
    id 'idea'
}

//######################################################################################################################
//                                               Artefact Specification
//######################################################################################################################
if (minecraft_version_min_fabric != minecraft_version) {
    archivesBaseName = "${mod_name}-fabric-${minecraft_version_min_fabric}-${minecraft_version}"
} else {
    archivesBaseName = "${mod_name}-fabric-${minecraft_version}"
}

//######################################################################################################################
//                                                Project Dependencies
//######################################################################################################################
//configurations {
//    shadowed
//    implementation.extendsFrom shadowed
//}

dependencies {
    minecraft "com.mojang:minecraft:${minecraft_version}"
    mappings loom.officialMojangMappings()
    modImplementation "net.fabricmc:fabric-loader:${fabric_loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${fabric_version}"
    implementation project(":Common")

//    shadowed("uk.co.caprica:vlcj:${vlcj_version}") { // Fallback: Direct download from https://oss.sonatype.org/content/repositories/snapshots/uk/co/caprica/
//        exclude group: 'net.java.dev.jna'
//    } // vlcJ
}

//######################################################################################################################
//                                                 Run Configurations
//######################################################################################################################
loom {
    runs {
        client {
            client()
            setConfigName("Fabric Client")
            ideConfigGenerated(true)
            runDir("run")
        }
        server {
            server()
            setConfigName("Fabric Server")
            ideConfigGenerated(true)
            runDir("run")
        }
    }
}


processResources {
    from project(":Common").sourceSets.main.resources
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile) {
    source(project(":Common").sourceSets.main.allSource)
}

//######################################################################################################################
//                                                    Build Tasks
//######################################################################################################################
shadowJar {
    archiveClassifier.set('')
    configurations = [project.configurations.shadowed]
    exclude 'META-INF/maven/**'
    finalizedBy 'remapJar'
}

remapJar {
    shadowJar {}
    //input.set shadowJar.archiveFile
}

//######################################################################################################################
//                                                      Publish
//######################################################################################################################
publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId project.group
            artifactId project.archivesBaseName
            version project.version
            artifact shadowJar
            //from components.java

            pom {
                name = "${mod_name} ${project.name}"
                description = 'This API provides easy ways for mod developers to play videos in a resource friendly way in Minecraft.'
                url = 'https://www.curseforge.com/minecraft/mc-mods/fancyvideo-api'
                licenses {
                    license {
                        name = 'GNU General Public License v3.0'
                        url = 'https://www.gnu.org/licenses/'
                    }
                }
                developers {
                    developer {
                        id = author
                        name = author
                        email = author_email
                    }
                }
                scm {
                    url = 'https://github.com/Nick1st/FancyVideo-API-1.18'
                }
            }
        }
    }
    repositories {
        maven {
            credentials {
                username = project.hasProperty('mavenUsername') ? mavenUsername : ""
                password = project.hasProperty('mavenPassword') ? mavenPassword : ""
            }
            authentication {
                basic(BasicAuthentication)
            }
            name = "nick1st-repository-releases"
            url = "https://maven.nick1st.de/releases"
        }
    }
}

publish.dependsOn(remapJar)